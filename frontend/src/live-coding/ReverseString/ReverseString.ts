// =====================================================
// üéØ –ó–ê–í–î–ê–ù–ù–Ø –î–õ–Ø –ü–†–ê–ö–¢–ò–ö–ò - REVERSE STRING
// =====================================================

// –†—ñ–≤–µ–Ω—å 1: –ë–ê–ó–û–í–Ü –ó–ê–í–î–ê–ù–ù–Ø
// -------------------------

// –ó–∞–≤–¥–∞–Ω–Ω—è 1.1: –†–æ–∑–≥–æ—Ä–Ω–∏ –ø—Ä–æ—Å—Ç–∏–π —Ä—è–¥–æ–∫
// –í—Ö—ñ–¥: "hello"
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: "olleh"
function reverseSimpleString(str: string): string {
  const splitString = str.split("");

  let reversSplitString = [];
  for (let i = str.length - 1; i >= 0; i--) {
    reversSplitString.push(splitString[i]);
  }

  const reverseSimpleString = reversSplitString.join("");

  return reverseSimpleString;
}

console.log(reverseSimpleString("hello world"));

// –ó–∞–≤–¥–∞–Ω–Ω—è 2: –†–æ–∑–≥–æ—Ä–Ω–∏ —Ç—ñ–ª—å–∫–∏ —Å–ª–æ–≤–∞ (–ø—Ä–æ–±—ñ–ª–∏ –∑–∞–ª–∏—à–∏—Ç–∏ –Ω–∞ –º—ñ—Å—Ü—ñ)
// –í—Ö—ñ–¥: "hello world"
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: "olleh dlrow"
function reverseWordsOnly(str: string): string {
  const wordsArr = str.split(" ");

  let reversedWordsInArray = [];

  for (let i = 0; i < wordsArr.length; i++) {
    const reverseWord = reverseSimpleString(wordsArr[i]);
    reversedWordsInArray.push(reverseWord);
    console.log(wordsArr[i]);
  }

  const reverseWordsOnly = reversedWordsInArray.join(" ");

  return reverseWordsOnly;
}

console.log(reverseWordsOnly("hello boy"));

// –ó–∞–≤–¥–∞–Ω–Ω—è 2.2: –†–æ–∑–≥–æ—Ä–Ω–∏ —Ä—è–¥–æ–∫, —ñ–≥–Ω–æ—Ä—É—é—á–∏ —Ä–æ–∑–¥—ñ–ª–æ–≤—ñ –∑–Ω–∞–∫–∏
// –í—Ö—ñ–¥: "hello, world!"
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: "dlrow, olleh!"
function reverseIgnorePunctuation(str: string): string {
  // TODO: –¢–≤–æ—î —Ä—ñ—à–µ–Ω–Ω—è —Ç—É—Ç
  return "";
}

// –ó–∞–≤–¥–∞–Ω–Ω—è 2.3: –†–æ–∑–≥–æ—Ä–Ω–∏ —Ç—ñ–ª—å–∫–∏ –ª—ñ—Ç–µ—Ä–∏ (—Ü–∏—Ñ—Ä–∏ —Ç–∞ —Å–∏–º–≤–æ–ª–∏ –Ω–∞ –º—ñ—Å—Ü—ñ)
// –í—Ö—ñ–¥: "a1b2c3"
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: "c1b2a3"
function reverseOnlyLetters(str: string): string {
  // TODO: –¢–≤–æ—î —Ä—ñ—à–µ–Ω–Ω—è —Ç—É—Ç
  return "";
}

// =====================================================
// –†—ñ–≤–µ–Ω—å 3: –°–ö–õ–ê–î–ù–Ü –ó–ê–í–î–ê–ù–ù–Ø
// -------------------------

// –ó–∞–≤–¥–∞–Ω–Ω—è 3.1: –†–æ–∑–≥–æ—Ä–Ω–∏ —Ä–µ—á–µ–Ω–Ω—è (—Å–ª–æ–≤–∞ –≤ –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É)
// –í—Ö—ñ–¥: "The quick brown fox"
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: "fox brown quick The"
function reverseSentence(str: string): string {
  // TODO: –¢–≤–æ—î —Ä—ñ—à–µ–Ω–Ω—è —Ç—É—Ç
  return "";
}

// –ó–∞–≤–¥–∞–Ω–Ω—è 3.2: –†–æ–∑–≥–æ—Ä–Ω–∏ –∫–æ–∂–Ω–µ —Å–ª–æ–≤–æ –æ–∫—Ä–µ–º–æ
// –í—Ö—ñ–¥: "The quick brown fox"
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: "ehT kciuq nworb xof"
function reverseEachWord(str: string): string {
  // TODO: –¢–≤–æ—î —Ä—ñ—à–µ–Ω–Ω—è —Ç—É—Ç
  return "";
}

// –ó–∞–≤–¥–∞–Ω–Ω—è 3.3: –ü–∞–ª—ñ–Ω–¥—Ä–æ–º —á–µ–∫–µ—Ä (–ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ —î —Ä—è–¥–æ–∫ –ø–∞–ª—ñ–Ω–¥—Ä–æ–º–æ–º)
// –í—Ö—ñ–¥: "racecar"
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: true
function isPalindrome(str: string): boolean {
  // TODO: –¢–≤–æ—î —Ä—ñ—à–µ–Ω–Ω—è —Ç—É—Ç
  return false;
}

// =====================================================
// –†—ñ–≤–µ–Ω—å 4: –ï–ö–°–ü–ï–†–¢–ù–Ü –ó–ê–í–î–ê–ù–ù–Ø
// ----------------------------

// –ó–∞–≤–¥–∞–Ω–Ω—è 4.1: –†–æ–∑–≥–æ—Ä–Ω–∏ Unicode —Ä—è–¥–æ–∫ (–µ–º–æ–¥–∑—ñ, –¥—ñ–∞–∫—Ä–∏—Ç–∏–∫–∏)
// –í—Ö—ñ–¥: "Hello üëã World üåç"
// –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: "üåç dlroW üëã olleH"
function reverseUnicode(str: string): string {
  // TODO: –¢–≤–æ—î —Ä—ñ—à–µ–Ω–Ω—è —Ç—É—Ç
  return "";
}

// –ó–∞–≤–¥–∞–Ω–Ω—è 4.2: –†–æ–∑–≥–æ—Ä–Ω–∏ —Ä—è–¥–æ–∫ –±–µ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤–±—É–¥–æ–≤–∞–Ω–∏—Ö –º–µ—Ç–æ–¥—ñ–≤
// –ú–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏: —Ü–∏–∫–ª—ñ, –∑–º—ñ–Ω–Ω—ñ, –±–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó
function reverseManual(str: string): string {
  // TODO: –¢–≤–æ—î —Ä—ñ—à–µ–Ω–Ω—è —Ç—É—Ç (–±–µ–∑ .reverse(), .split(), etc.)
  return "";
}

// –ó–∞–≤–¥–∞–Ω–Ω—è 4.3: –†–æ–∑–≥–æ—Ä–Ω–∏ —Ä—è–¥–æ–∫ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ
function reverseRecursive(str: string): string {
  // TODO: –¢–≤–æ—î —Ä—ñ—à–µ–Ω–Ω—è —Ç—É—Ç
  return "";
}
